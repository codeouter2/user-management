package com.auth.user.management.service.impl;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.auth.user.management.config.UserConfig;
import com.auth.user.management.service.UserService;

@Service
public class UserServiceImpl implements UserService{
	
	final static Logger logger = LogManager.getLogger(UserServiceImpl.class);
	
	@Autowired
	private UserConfig userConfig;

	@Override
	public void captcha() {
		logger.debug("Entryt into - captcha processing");
		
		String upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		String lower = "abcdefghijklmnopqrstuvwxyz";
		String number= "0123456789";
		
		if(userConfig.getCaptchaOnlyWithUpperLetter()) {
			return getCaptchaReady(1,upper);
		}else if(userConfig.getCaptchaOnlyWithUpperLetter()) {
			return getCaptchaReady(2,lower);
		}else {
			return getCaptchaReady(3,upper+lower+number);
		}
	}

	private String getCaptchaReady(int captchaType, String captchaChar) {
		int length = userConfig.getCaptchaLength();
		StringBuilder captchaBuild = new StringBuilder();
		List<Character> newCaptcha = new ArrayList<>();
		String finalCaptcha = "";
		for(int i=0;i<length;i++) {
			int randomIndex = (int) (Math.random()*captchaChar.length());
			char charAdd = captchaChar.charAt(randomIndex);
			captchaBuild.append(charAdd);
		}
		newCaptcha = captchaBuild.chars().mapToObj(e -> (char)e).collect(Collectors.toList());
		Collections.shuffle(newCaptcha,new Random());
		finalCaptcha = newCaptcha.stream().map(String :: valueOf).collect(Collectors.joining());
		return finalCaptcha;
	}
	
}
